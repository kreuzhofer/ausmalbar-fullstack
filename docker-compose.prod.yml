version: '3.8'

services:
  web:
    build: .
    command: bash -c "python manage.py wait_for_db && python manage.py migrate && python manage.py collectstatic --noinput && PYTHONPATH=/app python /app/scripts/create_admin.py && gunicorn --bind 0.0.0.0:8000 ausmalbar.wsgi:application"
    volumes:
      - static_volume:/app/staticfiles
      - media_volume:/app/media
    ports:
      - "8000:8000"
    env_file:
      - .env.production
    environment:
      - DB_ENGINE=${DB_ENGINE:-postgresql}
      - DB_HOST=${DB_HOST:-db}
      - DB_PORT=${DB_PORT:-5432}
      - DB_NAME=${DB_NAME:-ausmalbar}
      - DB_USER=${DB_USER:-postgres}
      - DB_PASSWORD=${DB_PASSWORD:-postgrespass}
      - DJANGO_SUPERUSER_USERNAME=${DJANGO_SUPERUSER_USERNAME:-admin}
      - DJANGO_SUPERUSER_EMAIL=${DJANGO_SUPERUSER_EMAIL:-admin@example.com}
      - DJANGO_SUPERUSER_PASSWORD=${DJANGO_SUPERUSER_PASSWORD:-admin}
      - PYTHONUNBUFFERED=1
      - MIXPANEL_TOKEN=${MIXPANEL_TOKEN}      
    depends_on:
      db:
        condition: service_healthy
    restart: unless-stopped

  db:
    image: postgres:13
    env_file:
      - .env.production
    environment:
      - POSTGRES_USER=${DB_USER:-postgres}
      - POSTGRES_PASSWORD=${DB_PASSWORD:-postgrespass}
      - POSTGRES_DB=${DB_NAME:-ausmalbar}
    volumes:
      - postgres_data:/var/lib/postgresql/data/
    ports:
      - "5432:5432"
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U ${DB_USER:-postgres} -d ${DB_NAME:-ausmalbar}"]
      interval: 5s
      timeout: 5s
      retries: 10
      start_period: 5s
    restart: unless-stopped

volumes:
  postgres_data:
  static_volume:
  media_volume:
